Karan Verma and kv57

Run WordGramDiver for wordgrams of size 2-10 and record
the number of WordGram values/objects that occur more than
once as reported by the runs. For example, with WSIZE = 2,
which generates 2-grams, the output of benchmark and benchmarkShift
each indicates that the total # wordgrams generated is 177,634
and that the # unique wordgrams is 117,181

This means there are 177,634 - 117,181 = 60,453 WordGram values that
occur more than once. Find these same values for other orders
of k and complete the table below for different k-grams/different 
values of WSIZE

WSIZE    # duplicates
2        60,453
3        10,756
4		 1987
5		 667
6        362
7	 	 226
8		 151
9		 105
10		 73

=====
Explain in your own words the conceptual differences between 
the benchmark and benchmarkShift methods.

The first parses through the through the whole set of words, creates a lists, converts it to an array,
 and then looks for matches in the word grams created. The second goes through word by word adding wordgrams
 to the list and checking them at the same time.
Answer these questions: 

(1) Why the results of these methods should be the same in 
terms of changes made to the HashSet parameter.

Both of them convert word grams into hashsets and are achieving the same thing though through different paths


(2) What are the conceptual differences between the two
benchmarking methods

The first parses through the through the whole set of words, creates a lists, converts it to an array,
 and then looks for matches in the word grams created. The second goes through word by word adding wordgrams
 to the list and checking them at the same time.


(3) Is the total amount of memory allocated for arrays
the same or different in the two methods? Account for
arrays created in the methods and arrays created by
WordGram objects. Try to be quantitative in answering.

The first methods involves creating two different main sets of arrays(list & words), while the second contains 
just one unique array (words) so the first likely requires more memory than the second.